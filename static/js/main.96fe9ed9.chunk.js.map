{"version":3,"sources":["components/Header.js","components/Footer.js","utils/Api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Footer","api","baseUrl","headers","this","_baseUrl","_headers","url","method","additionalHeaders","body","fetchOptions","JSON","stringify","fetch","then","res","ok","json","Promise","reject","status","statusText","_fetchApi","card","cardId","info","link","avatar","authorization","Card","props","src","alt","name","onClick","onCardClick","type","aria-label","likes","length","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","about","getInitialsCards","onEditAvatar","onEditProfile","onAddPlace","map","key","_id","PopupWithForm","isOpened","onClose","action","noValidate","title","children","closeText","ImagePopup","App","isEditProfileOpen","setIsEditProfileOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","placeholder","minLength","maxLength","required","pattern","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.96fe9ed9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <a className=\"header__logo\" href=\"/\"></a>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","class Api {\r\n  constructor(baseUrl, headers) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _fetchApi(url, method, additionalHeaders, body) {\r\n    const fetchOptions = {\r\n      method: method,\r\n      headers: { ...this._headers, ...additionalHeaders },\r\n    };\r\n    if (body) {\r\n      fetchOptions.body = JSON.stringify(body);\r\n    }\r\n\r\n    return fetch(`${this._baseUrl}${url}`, fetchOptions).then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\r\n      });\r\n  }\r\n\r\n  //Операции с карточками\r\n  getInitialsCards() {\r\n    return this._fetchApi(\"/cards\", \"GET\");\r\n  }\r\n\r\n  postCard(card) {\r\n    return this._fetchApi(\"/cards\", \"POST\", {\"Content-Type\": \"application/json\"}, card);\r\n  }\r\n\r\n  removeCard(cardId) {\r\n    return this._fetchApi(`/cards/${cardId}`, \"DELETE\");\r\n  }\r\n\r\n  likeCard(cardId) {\r\n    return this._fetchApi(`/cards/likes/${cardId}`, \"PUT\");\r\n  }\r\n\r\n  unlikeCard(cardId) {\r\n    return this._fetchApi(`/cards/likes/${cardId}`, \"DELETE\");\r\n  }\r\n\r\n  //Операции с данными пользователя\r\n  getUserInfo() {\r\n    return this._fetchApi(\"/users/me\", \"GET\");\r\n  }\r\n\r\n  editUserInfo(info) {\r\n    return this._fetchApi(\"/users/me\", \"PATCH\", {\"Content-Type\": \"application/json\"}, info);\r\n  }\r\n\r\n  editAvatar(link) {\r\n    return this._fetchApi(\"/users/me/avatar\", \"PATCH\", {\"Content-Type\": \"application/json\"}, {avatar: link});\r\n  }\r\n}\r\n\r\nconst api = new Api(\"https://mesto.nomoreparties.co/v1/cohort-13\", {\r\n  authorization: \"d0402095-4250-4903-b400-52c8ec468fa5\",\r\n});\r\n\r\nexport default api;\r\n","import React from 'react';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <figure className=\"element\">\r\n      <div className=\"element__image-container\">\r\n        <img\r\n          className=\"element__image\"\r\n          src={props.card.link}\r\n          alt={props.card.name}\r\n          onClick={() => {\r\n            props.onCardClick(props.card);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"element__info-container\">\r\n        <h2 className=\"element__name\">{props.card.name}</h2>\r\n        <div className=\"element__like-container\">\r\n          <button className=\"element__like\" type=\"button\" aria-label=\"Нравится\"/>\r\n          <p className=\"element__like-counter\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n      <button className=\"element__remove\" aria-label=\"Удалить\"/>\r\n    </figure>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\nimport api from '../utils/Api';\r\nimport Card from './Card';\r\n\r\nfunction Main(props) {\r\n  const [userName, setUserName] = useState();\r\n  const [userDescription, setUserDescription] = useState();\r\n  const [userAvatar, setUserAvatar] = useState();\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((res) => {\r\n        setUserName(res.name);\r\n        setUserDescription(res.about);\r\n        setUserAvatar(res.avatar);\r\n\r\n        return api.getInitialsCards();\r\n      })\r\n      .then((res) => {\r\n        setCards(res);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar-container\">\r\n          <img className=\"profile__avatar\" src={userAvatar} alt=\"Аватар пользователя\" />\r\n          <div className=\"profile__avatar-layout\">\r\n            <button className=\"profile__avatar-edit\" onClick={props.onEditAvatar}></button>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile__info-container\">\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__name-container\">\r\n              <h1 className=\"profile__name\">{userName}</h1>\r\n              <button\r\n                className=\"profile__edit-button\"\r\n                type=\"button\"\r\n                aria-label=\"Редактировать профиль\"\r\n                onClick={props.onEditProfile}\r\n              ></button>\r\n            </div>\r\n            <p className=\"profile__position\">{userDescription}</p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"profile__add-button\"\r\n          type=\"button\"\r\n          aria-label=\"Добавить\"\r\n          onClick={props.onAddPlace}\r\n        ></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        {cards.map((card) => (\r\n          <Card card={card} key={card._id} onCardClick={props.onCardClick} />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div className={`popup popup_${props.name} ${props.isOpened && 'popup_opened'}`}>\r\n      <div className=\"popup__container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__close-button\"\r\n          aria-label=\"Закрыть\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <form className=\"popup__form-container\" name={props.name} action=\"#\" method=\"GET\" noValidate>\r\n          <h2 className=\"popup__title\">{props.title}</h2>\r\n          {props.children}\r\n          <button type=\"submit\" className=\"popup__submit-button\">\r\n            {props.closeText}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div className={`popup popup_image-preview ${props.card && 'popup_opened'}`}>\r\n      <div className=\"popup__container\">\r\n        <button type=\"button\" className=\"popup__close-button\" aria-label=\"Закрыть\" onClick={props.onClose}></button>\r\n        <div className=\"popup__content-container\">\r\n          <figure className=\"popup__image-preview\">\r\n            <img className=\"popup__image\" src={props.card && props.card.link} alt={props.card && props.card.name} />\r\n            <figcaption className=\"popup__image-name\">{props.card && props.card.name}</figcaption>\r\n          </figure>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Main from './Main';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\n\r\nfunction App() {\r\n  const [isEditProfileOpen, setIsEditProfileOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState();\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfileOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditProfileOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <Header />\r\n        <Main\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onCardClick={handleCardClick}\r\n        />\r\n        <Footer />\r\n      </div>\r\n      <PopupWithForm\r\n        name=\"edit-form\"\r\n        title=\"Редактировать профиль\"\r\n        closeText=\"Сохранить\"\r\n        isOpened={isEditProfileOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <fieldset className=\"popup__fieldset\">\r\n          <label className=\"popup__form-field\">\r\n            <input\r\n              className=\"popup__input\"\r\n              id=\"input-edit-name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Имя\"\r\n              minLength=\"2\"\r\n              maxLength=\"40\"\r\n              required\r\n              pattern=\"[A-Za-zА-Яа-я\\s\\-]{1,}\"\r\n            />\r\n            <span\r\n              className=\"popup__input-error popup__input-error_active\"\r\n              id=\"input-edit-name-error\"\r\n            ></span>\r\n          </label>\r\n          <label className=\"popup__form-field\">\r\n            <input\r\n              className=\"popup__input\"\r\n              id=\"input-edit-position\"\r\n              name=\"about\"\r\n              type=\"text\"\r\n              placeholder=\"Род занятий\"\r\n              minLength=\"2\"\r\n              maxLength=\"200\"\r\n              required\r\n            />\r\n            <span\r\n              className=\"popup__input-error popup__input-error_active\"\r\n              id=\"input-edit-position-error\"\r\n            ></span>\r\n          </label>\r\n        </fieldset>\r\n      </PopupWithForm>\r\n      <PopupWithForm\r\n        name=\"add-form\"\r\n        title=\"Новое место\"\r\n        closeText=\"Создать\"\r\n        isOpened={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <fieldset className=\"popup__fieldset\">\r\n          <label className=\"popup__form-field\">\r\n            <input\r\n              className=\"popup__input\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Название\"\r\n              minLength=\"1\"\r\n              maxLength=\"30\"\r\n              required\r\n            />\r\n            <span className=\"popup__input-error\"></span>\r\n          </label>\r\n          <label className=\"popup__form-field\">\r\n            <input\r\n              className=\"popup__input\"\r\n              name=\"link\"\r\n              type=\"url\"\r\n              placeholder=\"Ссылка на картинку\"\r\n              required\r\n            />\r\n            <span className=\"popup__input-error\"></span>\r\n          </label>\r\n        </fieldset>\r\n      </PopupWithForm>\r\n      <PopupWithForm\r\n        name=\"update-avatar\"\r\n        title=\"Обновить аватар\"\r\n        closeText=\"Сохранить\"\r\n        isOpened={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n      >\r\n        <fieldset className=\"popup__fieldset\">\r\n          <label className=\"popup__form-field\">\r\n            <input\r\n              className=\"popup__input\"\r\n              name=\"link\"\r\n              type=\"url\"\r\n              placeholder=\"Ссылка на аватар\"\r\n              required\r\n            />\r\n            <span className=\"popup__input-error\"></span>\r\n          </label>\r\n        </fieldset>\r\n      </PopupWithForm>\r\n      <PopupWithForm name=\"confirm-form\" title=\"Вы уверены\" closeText=\"Да\" onClose={closeAllPopups}></PopupWithForm>\r\n      <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}