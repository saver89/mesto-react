{"version":3,"sources":["components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","components/EdifProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Footer","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","link","alt","name","onClick","type","aria-label","length","Main","props","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","key","PopupWithForm","isOpened","onClose","onSubmit","action","method","noValidate","title","children","closeText","ImagePopup","api","baseUrl","headers","this","_baseUrl","_headers","url","additionalHeaders","body","fetchOptions","JSON","stringify","fetch","then","res","ok","json","Promise","reject","status","statusText","_fetchApi","cardId","likeStatus","info","authorization","EditProfilePopup","isOpen","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","id","value","onChange","evt","target","placeholder","minLength","maxLength","required","pattern","EditAvatarPopup","onUpdateAvatar","avatarInput","useRef","current","ref","AddPlacePopup","setLink","App","isEditProfileOpen","setIsEditProfileOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getInitialsCards","catch","err","console","error","getUserInfo","Provider","changeLikeCardStatus","newCard","newCards","c","removeCard","filter","userInfo","editUserInfo","updatedUser","postCard","editAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b4eb8a1e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <a className=\"header__logo\" href=\"/\">&nbsp;</a>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React, { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = `element__remove ${isOwn ? 'element__remove_visible' : ''}`;\r\n\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_liked' : ''}`;\r\n\r\n  return (\r\n    <figure className=\"element\">\r\n      <div className=\"element__image-container\">\r\n        <img\r\n          className=\"element__image\"\r\n          src={card.link}\r\n          alt={card.name}\r\n          onClick={() => {\r\n            onCardClick(card);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"element__info-container\">\r\n        <h2 className=\"element__name\">{card.name}</h2>\r\n        <div className=\"element__like-container\">\r\n          <button\r\n            className={cardLikeButtonClassName}\r\n            type=\"button\"\r\n            aria-label=\"Нравится\"\r\n            onClick={() => {\r\n              onCardLike(card);\r\n            }}\r\n          />\r\n          <p className=\"element__like-counter\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        onClick={() => {\r\n          onCardDelete(card);\r\n        }}\r\n        aria-label=\"Удалить\"\r\n      />\r\n    </figure>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  const currentUser = useContext(CurrentUserContext);  \r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar-container\">\r\n          <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар пользователя\" />\r\n          <div className=\"profile__avatar-layout\">\r\n            <button className=\"profile__avatar-edit\" onClick={props.onEditAvatar}></button>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile__info-container\">\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__name-container\">\r\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n              <button\r\n                className=\"profile__edit-button\"\r\n                type=\"button\"\r\n                aria-label=\"Редактировать профиль\"\r\n                onClick={props.onEditProfile}\r\n              ></button>\r\n            </div>\r\n            <p className=\"profile__position\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"profile__add-button\"\r\n          type=\"button\"\r\n          aria-label=\"Добавить\"\r\n          onClick={props.onAddPlace}\r\n        ></button>\r\n      </section>\r\n      <section className=\"elements\">\r\n        {props.cards.map((card) => (\r\n          <Card\r\n            card={card}\r\n            key={card._id}\r\n            onCardClick={props.onCardClick}\r\n            onCardLike={props.onCardLike}\r\n            onCardDelete={props.onCardDelete}\r\n          />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div className={`popup popup_${props.name} ${props.isOpened ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__close-button\"\r\n          aria-label=\"Закрыть\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <form\r\n          className=\"popup__form-container\"\r\n          name={props.name}\r\n          onSubmit={props.onSubmit}\r\n          action=\"#\"\r\n          method=\"GET\"\r\n          noValidate\r\n        >\r\n          <h2 className=\"popup__title\">{props.title}</h2>\r\n          {props.children}\r\n          <button type=\"submit\" className=\"popup__submit-button\">\r\n            {props.closeText}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return (\r\n    <div className={`popup popup_image-preview ${props.card ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__container\">\r\n        <button type=\"button\" className=\"popup__close-button\" aria-label=\"Закрыть\" onClick={props.onClose}></button>\r\n        <div className=\"popup__content-container\">\r\n          <figure className=\"popup__image-preview\">\r\n            <img className=\"popup__image\" src={props.card && props.card.link} alt={props.card && props.card.name} />\r\n            <figcaption className=\"popup__image-name\">{props.card && props.card.name}</figcaption>\r\n          </figure>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","class Api {\r\n  constructor(baseUrl, headers) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _fetchApi(url, method, additionalHeaders, body) {\r\n    const fetchOptions = {\r\n      method: method,\r\n      headers: { ...this._headers, ...additionalHeaders },\r\n    };\r\n    if (body) {\r\n      fetchOptions.body = JSON.stringify(body);\r\n    }\r\n\r\n    return fetch(`${this._baseUrl}${url}`, fetchOptions).then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status} - ${res.statusText}`);\r\n      });\r\n  }\r\n\r\n  //Операции с карточками\r\n  getInitialsCards() {\r\n    return this._fetchApi(\"/cards\", \"GET\");\r\n  }\r\n\r\n  postCard(card) {\r\n    return this._fetchApi(\"/cards\", \"POST\", {\"Content-Type\": \"application/json\"}, card);\r\n  }\r\n\r\n  removeCard(cardId) {\r\n    return this._fetchApi(`/cards/${cardId}`, \"DELETE\");\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, likeStatus) {\r\n    if (likeStatus) {\r\n      return this._fetchApi(`/cards/likes/${cardId}`, \"PUT\");\r\n    } else {\r\n      return this._fetchApi(`/cards/likes/${cardId}`, \"DELETE\");  \r\n    }\r\n  }\r\n  \r\n  //Операции с данными пользователя\r\n  getUserInfo() {\r\n    return this._fetchApi(\"/users/me\", \"GET\");\r\n  }\r\n\r\n  editUserInfo(info) {\r\n    return this._fetchApi(\"/users/me\", \"PATCH\", {\"Content-Type\": \"application/json\"}, info);\r\n  }\r\n\r\n  editAvatar(link) {\r\n    return this._fetchApi(\"/users/me/avatar\", \"PATCH\", {\"Content-Type\": \"application/json\"}, {avatar: link});\r\n  }\r\n}\r\n\r\nconst api = new Api(\"https://mesto.nomoreparties.co/v1/cohort-13\", {\r\n  authorization: \"d0402095-4250-4903-b400-52c8ec468fa5\",\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const currentUser = useContext(CurrentUserContext);  \r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser])\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"edit-form\"\r\n      title=\"Редактировать профиль\"\r\n      closeText=\"Сохранить\"\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__fieldset\">\r\n        <label className=\"popup__form-field\">\r\n          <input\r\n            className=\"popup__input\"\r\n            id=\"input-edit-name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(evt) => {\r\n              setName(evt.target.value);\r\n            }}\r\n            placeholder=\"Имя\"\r\n            minLength=\"2\"\r\n            maxLength=\"40\"\r\n            required\r\n            pattern=\"[A-Za-zА-Яа-я\\s\\-]{1,}\"\r\n          />\r\n          <span\r\n            className=\"popup__input-error popup__input-error_active\"\r\n            id=\"input-edit-name-error\"\r\n          ></span>\r\n        </label>\r\n        <label className=\"popup__form-field\">\r\n          <input\r\n            className=\"popup__input\"\r\n            id=\"input-edit-position\"\r\n            name=\"about\"\r\n            value={description}\r\n            onChange={(evt) => {\r\n              setDescription(evt.target.value);\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Род занятий\"\r\n            minLength=\"2\"\r\n            maxLength=\"200\"\r\n            required\r\n          />\r\n          <span\r\n            className=\"popup__input-error popup__input-error_active\"\r\n            id=\"input-edit-position-error\"\r\n          ></span>\r\n        </label>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React, { useRef, useContext, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const avatarInput = useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onUpdateAvatar({\r\n      avatar: avatarInput.current.value,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    avatarInput.current.value = currentUser.avatar;\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"update-avatar\"\r\n      title=\"Обновить аватар\"\r\n      closeText=\"Сохранить\"\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__fieldset\">\r\n        <label className=\"popup__form-field\">\r\n          <input\r\n            className=\"popup__input\"\r\n            name=\"link\"\r\n            type=\"url\"\r\n            ref={avatarInput}\r\n            placeholder=\"Ссылка на аватар\"\r\n            required\r\n          />\r\n          <span className=\"popup__input-error\"></span>\r\n        </label>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onAddPlace({\r\n      name,\r\n      link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"add-form\"\r\n      title=\"Новое место\"\r\n      closeText=\"Создать\"\r\n      isOpened={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"popup__fieldset\">\r\n        <label className=\"popup__form-field\">\r\n          <input\r\n            className=\"popup__input\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n            placeholder=\"Название\"\r\n            minLength=\"1\"\r\n            maxLength=\"30\"\r\n            required\r\n          />\r\n          <span className=\"popup__input-error\"></span>\r\n        </label>\r\n        <label className=\"popup__form-field\">\r\n          <input\r\n            className=\"popup__input\"\r\n            name=\"link\"\r\n            type=\"url\"\r\n            value={link}\r\n            onChange={(e) => {\r\n              setLink(e.target.value);\r\n            }}\r\n            placeholder=\"Ссылка на картинку\"\r\n            required\r\n          />\r\n          <span className=\"popup__input-error\"></span>\r\n        </label>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Main from './Main';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/Api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EdifProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\n\r\nfunction App() {\r\n  const [isEditProfileOpen, setIsEditProfileOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState();\r\n  const [currentUser, setCurrentUser] = useState({ _id: '', name: '', avatar: '', about: '' });\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getInitialsCards()\r\n      .then((res) => {\r\n        setCards(res);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfileOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditProfileOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  function handleUpdateUser(userInfo) {\r\n    api\r\n      .editUserInfo(userInfo)\r\n      .then(() => {\r\n        const updatedUser = { ...currentUser };\r\n        updatedUser.name = userInfo.name;\r\n        updatedUser.about = userInfo.about;\r\n\r\n        setCurrentUser({ ...updatedUser });\r\n        setIsEditProfileOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        console.err(err);\r\n      });\r\n  }\r\n\r\n  function handleUpdateAvatar({ avatar }) {\r\n    api\r\n      .editAvatar(avatar)\r\n      .then((updatedUser) => {\r\n        setCurrentUser(updatedUser);\r\n        setIsEditAvatarPopupOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleAddPlaceSubmit(card) {\r\n    api\r\n      .postCard(card)\r\n      .then((newCard) => {\r\n        setCards([...cards, newCard]);\r\n        setIsAddPlacePopupOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\r\n        // Обновляем стейт\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api\r\n      .removeCard(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((c) => c._id !== card._id);\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <div className=\"container\">\r\n          <Header />\r\n          <Main\r\n            cards={cards}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onCardClick={handleCardClick}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n          />\r\n          <Footer />\r\n        </div>\r\n        <EditProfilePopup\r\n          isOpen={isEditProfileOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <PopupWithForm\r\n          name=\"confirm-form\"\r\n          title=\"Вы уверены\"\r\n          closeText=\"Да\"\r\n          onClose={closeAllPopups}\r\n        ></PopupWithForm>\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}